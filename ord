#!/bin/bash

# Change to the directory of the script
cd "$(dirname "${BASH_SOURCE[0]}")" || exit

# Function to print help message
print_help() {
    echo "Usage: ord [OPTIONS] SEARCH_TERM"
    echo "Options:"
    echo "        Search Faroese to Faroese (default)"
    echo "  -r    Search using regular expression"
    echo "  -a    Search all descriptions"
    echo "  -E    Search Faroese to English"
    echo "  -e    Search English to Faroese"
    echo "  -D    Search Faroese to Danish"
    echo "  -d    Search Danish to Faroese"
    echo "  -h    Display this help message"
    exit 1
}

# Function to convert string to lowercase
to_lowercase() {
    echo "$1" | tr '[:upper:]' '[:lower:]'
}

# Default behavior is searching Faroese to Faroese
search_dir="fo-fo"
regex_search=false
desc_search=false

# Parse options
while getopts ":eEhdra" opt; do
    case $opt in
        E)
            search_dir="fo-en"
            ;;
        e)
            search_dir="en-fo"
            ;;
	d)
	    search_dir="da-fo"
	    ;;
	r)
            regex_search=true
            ;;
	a)
	    desc_search=true
	    ;;
        h)
            print_help
            ;;
        \?)
            echo "Invalid option: -$OPTARG"
            print_help
            ;;
    esac
done

# Shift the options to access the positional argument (SEARCH_TERM)
shift "$((OPTIND - 1))"

# Check if SEARCH_TERM is provided
if [ -z "$1" ]; then
    echo "Search term not provided."
    print_help
fi

# Function to print a separator line
print_separator() {
    echo "--------------------------------------------------"
}

# Convert the search term to lowercase and extract the first letter
search_term="$1"
search_term_lowercase=$(to_lowercase "$search_term")
first_letter=$(echo "$search_term_lowercase" | cut -c 1)

# Search the TSV file and print the description
echo "Orðið: $1"

if [ $desc_search = false ] ; then

	description=$(grep -m 1 -i "^$search_term_lowercase" "$search_dir/${first_letter}_words_combined.tsv" | cut -f 2)

	if [ -n "$description" ]; then
	    # If regex search option is provided, perform regex search
	    if [ "$regex_search" = true ]; then
		cut -f 1 "$search_dir/${first_letter}_words_combined.tsv" | grep -i "$search_term"
	    fi
	    # Split and print the description on separate lines
	    if echo "$description" | grep -q '[0-9]'; then
		echo "$description" | awk -F'[0-9]' '{ for(i=2; i<=NF; i++) print $i "\n---" }'
	    else
		echo "$description"
	    fi
	else
	    echo "Word not found."
	fi
else
	# Iterate through all files and perform the search
	for file in "$search_dir/"*_words_combined.tsv; do
		# Search within descriptions
		description=$(grep -i "$search_term" "$file" | cut -f 2)
		col_word=$(grep -i "$search_term" "$file" | cut -f 1)
		if [ -n "$description" ]; then
			print_separator
			echo "File: $file"
			print_separator
			echo "$col_word"
	        fi
	done
fi
