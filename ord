#!/bin/bash

# Change to the directory of the script
cd "$(dirname "${BASH_SOURCE[0]}")" || exit

# Function to print help message
print_help() {
    echo "Usage: ord [OPTIONS] SEARCH_TERM"
    echo "Options:"
    echo "        Search Faroese to Faroese (default)"
    echo "  -s    Search using regular expression"
    echo "  -a    Search all words"
    echo "  -A    Search all descriptions+words"
    echo "  -E    Search Faroese to English"
    echo "  -e    Search English to Faroese"
    echo "  -D    Search Faroese to Danish"
    echo "  -d    Search Danish to Faroese"
    echo "  -r    Search Russian to Faroese"
    echo "  -n    Search Names in Faroese"
    echo "  -h    Display this help message"
    exit 1
}

# Function to convert string to lowercase
to_lowercase() {
    echo "$1" | tr '[:upper:]' '[:lower:]'
}

# Default behavior is searching Faroese to Faroese
# Default search directories
default_search_dirs=("fo-fo" "buskaparord" "samheitaordabok" "yrkordabok")
search_dirs=("${default_search_dirs[@]}")
#search_dir="fo-fo"

regex_search=false
desc_search=false
word_search=false

# Parse options
while getopts ":eEhdDsaAnr" opt; do
    case $opt in
        E)
            search_dirs="fo-en"
	    unset "search_dirs[1]"  # Exclude "buskaparord"
            unset "search_dirs[2]"  # Exclude "samheitaordabok"
            unset "search_dirs[3]"  # Exclude "yrkordabok"
            ;;
        e)
            search_dirs="en-fo"
	    unset "search_dirs[1]"  # Exclude "buskaparord"
            unset "search_dirs[2]"  # Exclude "samheitaordabok"
            unset "search_dirs[3]"  # Exclude "yrkordabok"
            ;;
	D)
	    search_dirs="fo-da"
	    unset "search_dirs[1]"  # Exclude "buskaparord"
            unset "search_dirs[2]"  # Exclude "samheitaordabok"
            unset "search_dirs[3]"  # Exclude "yrkordabok"
	    ;;
	d)
	    search_dirs="da-fo"
	    unset "search_dirs[1]"  # Exclude "buskaparord"
            unset "search_dirs[2]"  # Exclude "samheitaordabok"
            unset "search_dirs[3]"  # Exclude "yrkordabok"
	    ;;
	s)
            regex_search=true
            ;;
	a)
	    word_search=true
	    ;;
	A)
	    desc_search=true
	    ;;
	r)
	    search_dirs="ru-fo"
	    unset "search_dirs[1]"  # Exclude "buskaparord"
            unset "search_dirs[2]"  # Exclude "samheitaordabok"
            unset "search_dirs[3]"  # Exclude "yrkordabok"
	    ;;
	n)
	    search_dirs="navn"
	    unset "search_dirs[1]"  # Exclude "buskaparord"
            unset "search_dirs[2]"  # Exclude "samheitaordabok"
            unset "search_dirs[3]"  # Exclude "yrkordabok"
	    ;;
        h)
            print_help
            ;;
        \?)
            echo "Invalid option: -$OPTARG"
            print_help
            ;;
    esac
done

# Shift the options to access the positional argument (SEARCH_TERM)
shift "$((OPTIND - 1))"

# Check if SEARCH_TERM is provided
if [ -z "$1" ]; then
    echo "Search term not provided."
    print_help
fi

# Function to print a separator line
print_separator() {
    echo "--------------------------------------------------"
}

# Convert the search term to lowercase and extract the first letter
search_term="$1"
search_term_lowercase=$(to_lowercase "$search_term")
first_letter=$(echo "$search_term_lowercase" | cut -c 1)

# Search the TSV file and print the description
echo "Orðið leitað eftir: $1"


# Default search
if [ $regex_search = false ] && [ $word_search = false ] && [ $desc_search = false ] ; then

	# Loop through the search directories
	for search_dir in "${search_dirs[@]}"; do
		description=$(grep -m 1 -i "^$search_term_lowercase" "$search_dir/${first_letter}_words_combined.tsv" | cut -f 2)
		words=$(cut -f 1 "$search_dir/${first_letter}_words_combined.tsv" | grep -i "^$search_term_lowercase")

		echo "-------------  $search_dir  -----------------"
	    	# Split and print the description on separate lines
		if echo "$description" | grep -q '[0-9]'; then
			echo "$description" | awk -F'[0-9]' '{ for(i=2; i<=NF; i++) print "--------------------------------------------------\n" $i  }'
		else
			echo "$description"
		fi
		print_separator
		echo "Líknandi orð: $search_dir"
		echo $words
		print_separator
		echo ""
	done
fi

# Option -[edEd] -r 
if [ $desc_search = false ] && [ $regex_search = true ] ; then
	# If regex search option is provided, perform regex search
	# Loop through the search directories
	for search_dir in "${search_dirs[@]}"; do
		if [ "$regex_search" = true ]; then
			cut -f 1 "$search_dir/${first_letter}_words_combined.tsv" | grep -i -P "$search_term"
		else
			echo "Einki orð funni"
		fi
	done
fi

# Option -[eEdDr] -a 
if [ $word_search = true ] && [ $desc_search = false ] && [ $regex_search = false ] ; then
	for search_dir in "${search_dirs[@]}"; do
		# Iterate through all files and perform the search
		echo "-------------  $search_dir  -----------------"
		for file in "$search_dir/"*_words_combined.tsv; do
			# Search all the alphabet for the word
			col_word=$(cut -f 1 $file | grep -i -P "$search_term")
			if [ -n "$col_word" ]; then
				print_separator
				echo "$col_word"
			fi
		done
	done
fi

# Option -[eEdDr] -A
if [ $desc_search = true ] && [ $word_search = false ] && [ $regex_search = false ] ; then
	for search_dir in "${search_dirs[@]}"; do
		echo "-------------  $search_dir  -----------------"
		# Iterate through all files and perform the search
		for file in "$search_dir/"*_words_combined.tsv; do
			# Search within descriptions
			description=$(grep -i -P "$search_term" "$file" | cut -f 1) 
			if [ -n "$description" ]; then
				# Display extra information
				if [ $search_dir = "ru-fo" ] ; then
					  ruDescription=$(grep -i -P "$search_term" "$file")
					  while IFS= read -r desc; do
						print_separator
						echo "$desc"
					  done <<< "$ruDescription"
				else
					#print_separator
					#echo "$description"
					for desc in ${description[@]}; do
						print_separator
						echo "$desc"
					done
				fi
			fi
		done
	done
fi
